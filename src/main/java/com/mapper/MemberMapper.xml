<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.model.Member">
    <id column="m_code" jdbcType="CHAR" property="mCode" />
    <result column="m_name" jdbcType="VARCHAR" property="mName" />
    <result column="m_sex" jdbcType="VARCHAR" property="mSex" />
    <result column="m_birth" jdbcType="TIMESTAMP" property="mBirth" />
    <result column="m_identity" jdbcType="VARCHAR" property="mIdentity" />
    <result column="m_relation" jdbcType="VARCHAR" property="mRelation" />
    <result column="m_origin" jdbcType="VARCHAR" property="mOrigin" />
    <result column="m_education" jdbcType="VARCHAR" property="mEducation" />
    <result column="m_college" jdbcType="VARCHAR" property="mCollege" />
    <result column="m_tel" jdbcType="CHAR" property="mTel" />
    <result column="m_info" jdbcType="VARCHAR" property="mInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Where_Clause">
    <where>
      <if test="record.mCode != null">
        m_code = #{record.mCode,jdbcType=CHAR}
      </if>
      <if test="record.mName != null">
        and m_name = #{record.mName,jdbcType=VARCHAR}
      </if>
      <if test="record.mSex != null">
        and m_sex = #{record.mSex,jdbcType=VARCHAR}
      </if>
      <if test="record.mBirth != null">
        and m_birth = #{record.mBirth,jdbcType=TIMESTAMP}
      </if>
      <if test="record.mIdentity != null">
        and m_identity = #{record.mIdentity,jdbcType=VARCHAR}
      </if>
      <if test="record.mRelation != null">
        and m_relation = #{record.mRelation,jdbcType=VARCHAR}
      </if>
      <if test="record.mOrigin != null">
        and m_origin = #{record.mOrigin,jdbcType=VARCHAR}
      </if>
      <if test="record.mEducation != null">
        and m_education = #{record.mEducation,jdbcType=VARCHAR}
      </if>
      <if test="record.mCollege != null">
        and m_college = #{record.mCollege,jdbcType=VARCHAR}
      </if>
      <if test="record.mTel != null">
        and m_tel = #{record.mTel,jdbcType=CHAR}
      </if>
      <if test="record.mInfo != null">
        and m_info = #{record.mInfo,jdbcType=VARCHAR}
      </if>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Query_Clause">
    <where>
      <if test="record.mCode != null">
        m_code like concat('%', #{record.mCode,jdbcType=CHAR}, '%')
      </if>
      <if test="record.mName != null">
        and m_name like concat('%', #{record.mName,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mSex != null">
        and m_sex like concat('%', #{record.mSex,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mBirth != null">
        and m_birth like concat('%', #{record.mBirth,jdbcType=TIMESTAMP}, '%')
      </if>
      <if test="record.mIdentity != null">
        and m_identity like concat('%', #{record.mIdentity,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mRelation != null">
        and m_relation like concat('%', #{record.mRelation,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mOrigin != null">
        and m_origin like concat('%', #{record.mOrigin,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mEducation != null">
        and m_education like concat('%', #{record.mEducation,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mCollege != null">
        and m_college like concat('%', #{record.mCollege,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.mTel != null">
        and m_tel like concat('%', #{record.mTel,jdbcType=CHAR}, '%')
      </if>
      <if test="record.mInfo != null">
        and m_info like concat('%', #{record.mInfo,jdbcType=VARCHAR}, '%')
      </if>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Clause_Offset">
    <if test="_parameter != null and _parameter.containsKey('limit') and limit != null">
      <choose>
        <when test="_parameter.containsKey('offset') and offset != null">
          order by m_code asc limit #{offset}, #{limit};
        </when>
        <otherwise>
          order by m_code asc limit  #{limit};
        </otherwise>
      </choose>
    </if>
  </sql>
  <sql id="Base_Column_List">
    m_code, m_name, m_sex, m_birth, m_identity, m_relation, m_origin, m_education, m_college, m_tel, m_info
  </sql>
  <sql id="Param_Column_List">
    <choose>
      <when test="_parameter.containsKey('fields') and fields != null">
        ${fields}
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
  </sql>
  <sql id="Param_Where_Clause_Like">
    <if test="_parameter != null and _parameter.containsKey('field') and field != null">
      <where>
        <if test="_parameter.containsKey('value') and value != null">
          ${field} like concat('%', #{value}, '%')
        </if>
      </where>
      <if test="_parameter.containsKey('limit') and limit != null">
        <choose>
          <when test="_parameter.containsKey('offset') and offset != null">
            order by ${field} asc limit #{offset}, #{limit};
          </when>
          <otherwise>
            order by ${field} asc limit  #{limit};
          </otherwise>
        </choose>
      </if>
    </if>
  </sql>
  <sql id="Param_Where_Clause_Equal">
    <if test="_parameter != null and _parameter.containsKey('field') and field != null">
      <where>
        <if test="_parameter.containsKey('value') and value != null">
          ${field} = #{value}
        </if>
        <if test="_parameter.containsKey('value1') and _parameter.containsKey('value2')">
          <if test="value1 != null and value2 != null">
            ${field} between #{value1} and #{value2}
          </if>
        </if>
      </where>
      <if test="_parameter.containsKey('limit') and limit != null">
        <choose>
          <when test="_parameter.containsKey('offset') and offset != null">
            order by ${field} asc limit #{offset}, #{limit};
          </when>
          <otherwise>
            order by ${field} asc limit  #{limit};
          </otherwise>
        </choose>
      </if>
    </if>
  </sql>
  <sql id="Param_Where_Clause_Sql">
    <where>
      <choose>
        <when test="_parameter != null and _parameter.containsKey('sql') and sql != null">
          ${sql}
        </when>
        <otherwise>
          m_code is null
        </otherwise>
      </choose>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <select id="selectByExample" parameterType="com.model.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_member
    where m_code = #{mCode,jdbcType=CHAR}
  </select>
  <select id="selectByMinPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    where m_code = (select min(m_code) from tb_member)
  </select>
  <select id="selectByMaxPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    where m_code = (select max(m_code) from tb_member)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_member
    where m_code = #{mCode,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.MemberExample">
    delete from tb_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="m_code" keyProperty="mCode" parameterType="com.model.Member" useGeneratedKeys="true">
    insert into tb_member (m_code, m_name, m_sex, m_birth, m_identity, m_relation, m_origin, m_education, m_college, m_tel, m_info)
    values (#{mCode,jdbcType=CHAR}, #{mName,jdbcType=VARCHAR}, #{mSex,jdbcType=VARCHAR}, #{mBirth,jdbcType=TIMESTAMP},
      #{mIdentity,jdbcType=VARCHAR}, #{mRelation,jdbcType=VARCHAR}, #{mOrigin,jdbcType=VARCHAR}, 
      #{mEducation,jdbcType=VARCHAR}, #{mCollege,jdbcType=VARCHAR}, #{mTel,jdbcType=CHAR}, #{mInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="m_code" keyProperty="mCode" parameterType="com.model.Member" useGeneratedKeys="true">
    insert into tb_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mCode != null">
        m_code,
      </if>
      <if test="mName != null">
        m_name,
      </if>
      <if test="mSex != null">
        m_sex,
      </if>
      <if test="mBirth != null">
        m_birth,
      </if>
      <if test="mIdentity != null">
        m_identity,
      </if>
      <if test="mRelation != null">
        m_relation,
      </if>
      <if test="mOrigin != null">
        m_origin,
      </if>
      <if test="mEducation != null">
        m_education,
      </if>
      <if test="mCollege != null">
        m_college,
      </if>
      <if test="mTel != null">
        m_tel,
      </if>
      <if test="mInfo != null">
        m_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mCode != null">
        #{mCode,jdbcType=CHAR},
      </if>
      <if test="mName != null">
        #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mSex != null">
        #{mSex,jdbcType=VARCHAR},
      </if>
      <if test="mBirth != null">
        #{mBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="mIdentity != null">
        #{mIdentity,jdbcType=VARCHAR},
      </if>
      <if test="mRelation != null">
        #{mRelation,jdbcType=VARCHAR},
      </if>
      <if test="mOrigin != null">
        #{mOrigin,jdbcType=VARCHAR},
      </if>
      <if test="mEducation != null">
        #{mEducation,jdbcType=VARCHAR},
      </if>
      <if test="mCollege != null">
        #{mCollege,jdbcType=VARCHAR},
      </if>
      <if test="mTel != null">
        #{mTel,jdbcType=CHAR},
      </if>
      <if test="mInfo != null">
        #{mInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.MemberExample" resultType="java.lang.Long">
    select count(*) from tb_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByModel" parameterType="com.model.Guidance" resultType="java.lang.Long">
    select count(*) from tb_member
    <if test="_parameter != null">
      <include refid="Model_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_member
    <set>
      <if test="record.mCode != null">
        m_code = #{record.mCode,jdbcType=CHAR},
      </if>
      <if test="record.mName != null">
        m_name = #{record.mName,jdbcType=VARCHAR},
      </if>
      <if test="record.mSex != null">
        m_sex = #{record.mSex,jdbcType=VARCHAR},
      </if>
      <if test="record.mBirth != null">
        m_birth = #{record.mBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mIdentity != null">
        m_identity = #{record.mIdentity,jdbcType=VARCHAR},
      </if>
      <if test="record.mRelation != null">
        m_relation = #{record.mRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.mOrigin != null">
        m_origin = #{record.mOrigin,jdbcType=VARCHAR},
      </if>
      <if test="record.mEducation != null">
        m_education = #{record.mEducation,jdbcType=VARCHAR},
      </if>
      <if test="record.mCollege != null">
        m_college = #{record.mCollege,jdbcType=VARCHAR},
      </if>
      <if test="record.mTel != null">
        m_tel = #{record.mTel,jdbcType=CHAR},
      </if>
      <if test="record.mInfo != null">
        m_info = #{record.mInfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_member
    set m_code = #{record.mCode,jdbcType=CHAR},
      m_name = #{record.mName,jdbcType=VARCHAR},
      m_sex = #{record.mSex,jdbcType=VARCHAR},
      m_birth = #{record.mBirth,jdbcType=TIMESTAMP},
      m_identity = #{record.mIdentity,jdbcType=VARCHAR},
      m_relation = #{record.mRelation,jdbcType=VARCHAR},
      m_origin = #{record.mOrigin,jdbcType=VARCHAR},
      m_education = #{record.mEducation,jdbcType=VARCHAR},
      m_college = #{record.mCollege,jdbcType=VARCHAR},
      m_tel = #{record.mTel,jdbcType=CHAR},
      m_info = #{record.mInfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Member">
    update tb_member
    <set>
      <if test="mName != null">
        m_name = #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mSex != null">
        m_sex = #{mSex,jdbcType=VARCHAR},
      </if>
      <if test="mBirth != null">
        m_birth = #{mBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="mIdentity != null">
        m_identity = #{mIdentity,jdbcType=VARCHAR},
      </if>
      <if test="mRelation != null">
        m_relation = #{mRelation,jdbcType=VARCHAR},
      </if>
      <if test="mOrigin != null">
        m_origin = #{mOrigin,jdbcType=VARCHAR},
      </if>
      <if test="mEducation != null">
        m_education = #{mEducation,jdbcType=VARCHAR},
      </if>
      <if test="mCollege != null">
        m_college = #{mCollege,jdbcType=VARCHAR},
      </if>
      <if test="mTel != null">
        m_tel = #{mTel,jdbcType=CHAR},
      </if>
      <if test="mInfo != null">
        m_info = #{mInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where m_code = #{mCode,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Member">
    update tb_member
    set m_name = #{mName,jdbcType=VARCHAR},
      m_sex = #{mSex,jdbcType=VARCHAR},
      m_birth = #{mBirth,jdbcType=TIMESTAMP},
      m_identity = #{mIdentity,jdbcType=VARCHAR},
      m_relation = #{mRelation,jdbcType=VARCHAR},
      m_origin = #{mOrigin,jdbcType=VARCHAR},
      m_education = #{mEducation,jdbcType=VARCHAR},
      m_college = #{mCollege,jdbcType=VARCHAR},
      m_tel = #{mTel,jdbcType=CHAR},
      m_info = #{mInfo,jdbcType=VARCHAR}
    where m_code = #{mCode,jdbcType=CHAR}
  </update>
  <select id="selectAllModel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    <include refid="Model_Clause_Offset" />
  </select>
  <select id="countAllModel" resultType="java.lang.Long">
    select count(*) from tb_member
  </select>
  <select id="selectByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    <include refid="Model_Where_Clause" />
  </select>
  <select id="countBySelectParam" parameterType="map" resultType="java.lang.Long">
    select count(*) from tb_member
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    <include refid="Model_Query_Clause" />
  </select>
  <select id="countByQueryParam" parameterType="map" resultType="java.lang.Long">
    select count(*) from tb_member
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="countBySelectCondition" resultType="java.lang.Long">
    select count(*) from tb_member
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_member
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="countByQueryCondition" resultType="java.lang.Long">
    select count(*) from tb_member
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_member
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_member
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_member
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_member
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Base_Column_List" />
    from tb_member
    <include refid="Param_Where_Clause_Sql" />
  </select>
  <select id="selectFieldsBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Param_Column_List" />
    from tb_member
    <include refid="Param_Where_Clause_Sql" />
  </select>
</mapper>