<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.GuidanceMapper">
  <resultMap id="BaseResultMap" type="com.model.Guidance">
    <id column="gd_id" jdbcType="INTEGER" property="gdId" />
    <result column="gd_code" jdbcType="CHAR" property="gdCode" />
    <result column="gd_label" jdbcType="CHAR" property="gdLabel" />
    <result column="gd_name" jdbcType="VARCHAR" property="gdName" />
    <result column="gd_unit" jdbcType="VARCHAR" property="gdUnit" />
    <result column="gd_rate" jdbcType="DOUBLE" property="gdRate" />
    <result column="gd_price" jdbcType="DOUBLE" property="gdPrice" />
    <result column="gd_item" jdbcType="DOUBLE" property="gdItem" />
    <result column="gd_work" jdbcType="VARCHAR" property="gdWork" />
    <result column="gd_cost" jdbcType="VARCHAR" property="gdCost" />
    <result column="gd_role" jdbcType="VARCHAR" property="gdRole" />
    <result column="gd_info" jdbcType="VARCHAR" property="gdInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Where_Clause">
    <where>
      <if test="record.gdId != null">
        gd_id = #{record.gdId,jdbcType=INTEGER}
      </if>
      <if test="record.gdCode != null">
        and gd_code = #{record.gdCode,jdbcType=CHAR}
      </if>
      <if test="record.gdLabel != null">
        and gd_label = #{record.gdLabel,jdbcType=CHAR}
      </if>
      <if test="record.gdName != null">
        and gd_name = #{record.gdName,jdbcType=VARCHAR}
      </if>
      <if test="record.gdUnit != null">
        and gd_unit = #{record.gdUnit,jdbcType=VARCHAR}
      </if>
      <if test="record.gdRate != null">
        and gd_rate = #{record.gdRate,jdbcType=DOUBLE}
      </if>
      <if test="record.gdPrice != null">
        and gd_price = #{record.gdPrice,jdbcType=DOUBLE}
      </if>
      <if test="record.gdItem != null">
        and gd_item = #{record.gdItem,jdbcType=DOUBLE}
      </if>
      <if test="record.gdWork != null">
        and gd_work = #{record.gdWork,jdbcType=VARCHAR}
      </if>
      <if test="record.gdCost != null">
        and gd_cost = #{record.gdCost,jdbcType=VARCHAR}
      </if>
      <if test="record.gdRole != null">
        and gd_role = #{record.gdRole,jdbcType=VARCHAR}
      </if>
      <if test="record.gdInfo != null">
        and gd_info = #{record.gdInfo,jdbcType=VARCHAR}
      </if>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Query_Clause">
    <where>
      <if test="record.gdId != null">
        gd_id like concat('%', #{record.gdId,jdbcType=INTEGER}, '%')
      </if>
      <if test="record.gdCode != null">
        and gd_code like concat('%', #{record.gdCode,jdbcType=CHAR}, '%')
      </if>
      <if test="record.gdLabel != null">
        and gd_label like concat('%', #{record.gdLabel,jdbcType=CHAR}, '%')
      </if>
      <if test="record.gdName != null">
        and gd_name like concat('%', #{record.gdName,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.gdUnit != null">
        and gd_unit like concat('%', #{record.gdUnit,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.gdRate != null">
        and gd_rate like concat('%', #{record.gdRate,jdbcType=DOUBLE}, '%')
      </if>
      <if test="record.gdPrice != null">
        and gd_price like concat('%', #{record.gdPrice,jdbcType=DOUBLE}, '%')
      </if>
      <if test="record.gdItem != null">
        and gd_item like concat('%', #{record.gdItem,jdbcType=DOUBLE}, '%')
      </if>
      <if test="record.gdWork != null">
        and gd_work like concat('%', #{record.gdWork,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.gdCost != null">
        and gd_cost like concat('%', #{record.gdCost,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.gdRole != null">
        and gd_role like concat('%', #{record.gdRole,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.gdInfo != null">
        and gd_info like concat('%', #{record.gdInfo,jdbcType=VARCHAR}, '%')
      </if>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Clause_Offset">
    <if test="_parameter != null and _parameter.containsKey('limit') and limit != null">
      <choose>
        <when test="_parameter.containsKey('offset') and offset != null">
          order by gd_id asc limit #{offset}, #{limit};
        </when>
        <otherwise>
          order by gd_id asc limit  #{limit};
        </otherwise>
      </choose>
    </if>
  </sql>
  <sql id="Base_Column_List">
    gd_id, gd_code, gd_label, gd_name, gd_unit, gd_rate, gd_price, gd_item, gd_work, 
    gd_cost, gd_role, gd_info
  </sql>
  <sql id="Param_Column_List">
    <choose>
      <when test="_parameter.containsKey('fields') and fields != null">
        ${fields}
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
  </sql>
  <sql id="Param_Where_Clause_Like">
    <if test="_parameter != null and _parameter.containsKey('field') and field != null">
      <where>
        <if test="_parameter.containsKey('value') and value != null">
          ${field} like concat('%', #{value}, '%')
        </if>
      </where>
      <if test="_parameter.containsKey('limit') and limit != null">
        <choose>
          <when test="_parameter.containsKey('offset') and offset != null">
            order by ${field} asc limit #{offset}, #{limit};
          </when>
          <otherwise>
            order by ${field} asc limit  #{limit};
          </otherwise>
        </choose>
      </if>
    </if>
  </sql>
  <sql id="Param_Where_Clause_Equal">
    <if test="_parameter != null and _parameter.containsKey('field') and field != null">
      <where>
        <if test="_parameter.containsKey('value') and value != null">
          ${field} = #{value}
        </if>
        <if test="_parameter.containsKey('value1') and _parameter.containsKey('value2')">
          <if test="value1 != null and value2 != null">
            ${field} between #{value1} and #{value2}
          </if>
        </if>
      </where>
      <if test="_parameter.containsKey('limit') and limit != null">
        <choose>
          <when test="_parameter.containsKey('offset') and offset != null">
            order by ${field} asc limit #{offset}, #{limit};
          </when>
          <otherwise>
            order by ${field} asc limit  #{limit};
          </otherwise>
        </choose>
      </if>
    </if>
  </sql>
  <sql id="Param_Where_Clause_Sql">
    <where>
      <choose>
        <when test="_parameter != null and _parameter.containsKey('sql') and sql != null">
          ${sql}
        </when>
        <otherwise>
          gd_id is null
        </otherwise>
      </choose>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <select id="selectByExample" parameterType="com.model.GuidanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_guidance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_guidance
    where gd_id = #{gdId,jdbcType=INTEGER}
  </select>
  <select id="selectByMinPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    where gd_id = (select min(gd_id) from tb_guidance)
  </select>
  <select id="selectByMaxPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    where gd_id = (select max(gd_id) from tb_guidance)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_guidance
    where gd_id = #{gdId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.GuidanceExample">
    delete from tb_guidance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="gd_id" keyProperty="gdId" parameterType="com.model.Guidance" useGeneratedKeys="true">
    insert into tb_guidance (gd_id, gd_code, gd_label, gd_name,
      gd_unit, gd_rate, gd_price, gd_item, gd_work, gd_cost, gd_role, gd_info)
    values (#{gdCode,jdbcType=INTEGER}, #{gdCode,jdbcType=CHAR}, #{gdLabel,jdbcType=CHAR}, #{gdName,jdbcType=VARCHAR},
      #{gdUnit,jdbcType=VARCHAR}, #{gdRate,jdbcType=DOUBLE}, #{gdPrice,jdbcType=DOUBLE}, 
      #{gdItem,jdbcType=DOUBLE}, #{gdWork,jdbcType=VARCHAR}, #{gdCost,jdbcType=VARCHAR}, 
      #{gdRole,jdbcType=VARCHAR}, #{gdInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="gd_id" keyProperty="gdId" parameterType="com.model.Guidance" useGeneratedKeys="true">
    insert into tb_guidance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gdId != null">
        gd_id,
      </if>
      <if test="gdCode != null">
        gd_code,
      </if>
      <if test="gdLabel != null">
        gd_label,
      </if>
      <if test="gdName != null">
        gd_name,
      </if>
      <if test="gdUnit != null">
        gd_unit,
      </if>
      <if test="gdRate != null">
        gd_rate,
      </if>
      <if test="gdPrice != null">
        gd_price,
      </if>
      <if test="gdItem != null">
        gd_item,
      </if>
      <if test="gdWork != null">
        gd_work,
      </if>
      <if test="gdCost != null">
        gd_cost,
      </if>
      <if test="gdRole != null">
        gd_role,
      </if>
      <if test="gdInfo != null">
        gd_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gdId != null">
        #{gdId,jdbcType=INTEGER},
      </if>
      <if test="gdCode != null">
        #{gdCode,jdbcType=CHAR},
      </if>
      <if test="gdLabel != null">
        #{gdLabel,jdbcType=CHAR},
      </if>
      <if test="gdName != null">
        #{gdName,jdbcType=VARCHAR},
      </if>
      <if test="gdUnit != null">
        #{gdUnit,jdbcType=VARCHAR},
      </if>
      <if test="gdRate != null">
        #{gdRate,jdbcType=DOUBLE},
      </if>
      <if test="gdPrice != null">
        #{gdPrice,jdbcType=DOUBLE},
      </if>
      <if test="gdItem != null">
        #{gdItem,jdbcType=DOUBLE},
      </if>
      <if test="gdWork != null">
        #{gdWork,jdbcType=VARCHAR},
      </if>
      <if test="gdCost != null">
        #{gdCost,jdbcType=VARCHAR},
      </if>
      <if test="gdRole != null">
        #{gdRole,jdbcType=VARCHAR},
      </if>
      <if test="gdInfo != null">
        #{gdInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.GuidanceExample" resultType="java.lang.Long">
    select count(*) from tb_guidance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByModel" parameterType="com.model.Guidance" resultType="java.lang.Long">
    select count(*) from tb_guidance
    <if test="_parameter != null">
      <include refid="Model_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_guidance
    <set>
      <if test="record.gdId != null">
        gd_id = #{record.gdId,jdbcType=INTEGER},
      </if>
      <if test="record.gdCode != null">
        gd_code = #{record.gdCode,jdbcType=CHAR},
      </if>
      <if test="record.gdLabel != null">
        gd_label = #{record.gdLabel,jdbcType=CHAR},
      </if>
      <if test="record.gdName != null">
        gd_name = #{record.gdName,jdbcType=VARCHAR},
      </if>
      <if test="record.gdUnit != null">
        gd_unit = #{record.gdUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.gdRate != null">
        gd_rate = #{record.gdRate,jdbcType=DOUBLE},
      </if>
      <if test="record.gdPrice != null">
        gd_price = #{record.gdPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.gdItem != null">
        gd_item = #{record.gdItem,jdbcType=DOUBLE},
      </if>
      <if test="record.gdWork != null">
        gd_work = #{record.gdWork,jdbcType=VARCHAR},
      </if>
      <if test="record.gdCost != null">
        gd_cost = #{record.gdCost,jdbcType=VARCHAR},
      </if>
      <if test="record.gdRole != null">
        gd_role = #{record.gdRole,jdbcType=VARCHAR},
      </if>
      <if test="record.gdInfo != null">
        gd_info = #{record.gdInfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_guidance
    set gd_id = #{record.gdId,jdbcType=INTEGER},
      gd_code = #{record.gdCode,jdbcType=CHAR},
      gd_label = #{record.gdLabel,jdbcType=CHAR},
      gd_name = #{record.gdName,jdbcType=VARCHAR},
      gd_unit = #{record.gdUnit,jdbcType=VARCHAR},
      gd_rate = #{record.gdRate,jdbcType=DOUBLE},
      gd_price = #{record.gdPrice,jdbcType=DOUBLE},
      gd_item = #{record.gdItem,jdbcType=DOUBLE},
      gd_work = #{record.gdWork,jdbcType=VARCHAR},
      gd_cost = #{record.gdCost,jdbcType=VARCHAR},
      gd_role = #{record.gdRole,jdbcType=VARCHAR},
      gd_info = #{record.gdInfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Guidance">
    update tb_guidance
    <set>
      <if test="gdCode != null">
        gd_code = #{gdCode,jdbcType=CHAR},
      </if>
      <if test="gdLabel != null">
        gd_label = #{gdLabel,jdbcType=CHAR},
      </if>
      <if test="gdName != null">
        gd_name = #{gdName,jdbcType=VARCHAR},
      </if>
      <if test="gdUnit != null">
        gd_unit = #{gdUnit,jdbcType=VARCHAR},
      </if>
      <if test="gdRate != null">
        gd_rate = #{gdRate,jdbcType=DOUBLE},
      </if>
      <if test="gdPrice != null">
        gd_price = #{gdPrice,jdbcType=DOUBLE},
      </if>
      <if test="gdItem != null">
        gd_item = #{gdItem,jdbcType=DOUBLE},
      </if>
      <if test="gdWork != null">
        gd_work = #{gdWork,jdbcType=VARCHAR},
      </if>
      <if test="gdCost != null">
        gd_cost = #{gdCost,jdbcType=VARCHAR},
      </if>
      <if test="gdRole != null">
        gd_role = #{gdRole,jdbcType=VARCHAR},
      </if>
      <if test="gdInfo != null">
        gd_info = #{gdInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where gd_id = #{gdId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Guidance">
    update tb_guidance
    set gd_code = #{gdCode,jdbcType=CHAR},
      gd_label = #{gdLabel,jdbcType=CHAR},
      gd_name = #{gdName,jdbcType=VARCHAR},
      gd_unit = #{gdUnit,jdbcType=VARCHAR},
      gd_rate = #{gdRate,jdbcType=DOUBLE},
      gd_price = #{gdPrice,jdbcType=DOUBLE},
      gd_item = #{gdItem,jdbcType=DOUBLE},
      gd_work = #{gdWork,jdbcType=VARCHAR},
      gd_cost = #{gdCost,jdbcType=VARCHAR},
      gd_role = #{gdRole,jdbcType=VARCHAR},
      gd_info = #{gdInfo,jdbcType=VARCHAR}
    where gd_id = #{gdId,jdbcType=INTEGER}
  </update>
  <select id="selectAllModel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    <include refid="Model_Clause_Offset" />
  </select>
  <select id="countAllModel" resultType="java.lang.Long">
    select count(*) from tb_guidance
  </select>
  <select id="selectByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    <include refid="Model_Where_Clause" />
  </select>
  <select id="countBySelectParam" parameterType="map" resultType="java.lang.Long">
    select count(*) from tb_guidance
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    <include refid="Model_Query_Clause" />
  </select>
  <select id="countByQueryParam" parameterType="map" resultType="java.lang.Long">
    select count(*) from tb_guidance
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="countBySelectCondition" resultType="java.lang.Long">
    select count(*) from tb_guidance
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="countByQueryCondition" resultType="java.lang.Long">
    select count(*) from tb_guidance
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_guidance
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_guidance
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_guidance
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_guidance
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Base_Column_List" />
    from tb_guidance
    <include refid="Param_Where_Clause_Sql" />
  </select>
  <select id="selectFieldsBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Param_Column_List" />
    from tb_guidance
    <include refid="Param_Where_Clause_Sql" />
  </select>
</mapper>